{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\norar\\\\blogilista-front_osa5\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\norar\\\\blogilista-front_osa5\\\\src\\\\App.js\";\nimport React from 'react';\nimport './index.css';\nimport Blog from './components/Blog';\nimport { useState, useEffect } from 'react';\nimport blogservice from './services/blogservice';\nimport loginService from './services/login';\n\nconst App = () => {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        username = _useState2[0],\n        addusername = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        password = _useState4[0],\n        addpassword = _useState4[1];\n\n  const _useState5 = useState(null),\n        _useState6 = _slicedToArray(_useState5, 2),\n        errorMessage = _useState6[0],\n        setErrorMessage = _useState6[1];\n\n  const _useState7 = useState(null),\n        _useState8 = _slicedToArray(_useState7, 2),\n        ok = _useState8[0],\n        lisaaok = _useState8[1];\n\n  const _useState9 = useState(null),\n        _useState10 = _slicedToArray(_useState9, 2),\n        user = _useState10[0],\n        setuser = _useState10[1];\n\n  const _useState11 = useState(''),\n        _useState12 = _slicedToArray(_useState11, 2),\n        title = _useState12[0],\n        addtitle = _useState12[1];\n\n  const _useState13 = useState(''),\n        _useState14 = _slicedToArray(_useState13, 2),\n        author = _useState14[0],\n        addauthor = _useState14[1];\n\n  const _useState15 = useState(''),\n        _useState16 = _slicedToArray(_useState15, 2),\n        url = _useState16[0],\n        addurl = _useState16[1];\n\n  const add = async event => {\n    event.preventDefault();\n\n    if (title === '' || url === '') {\n      setErrorMessage('Täytä kaikki kentät');\n    } else {\n      try {\n        const blogi = {\n          title: event.target.title,\n          author: event.target.author,\n          url: event.target.url\n        };\n        await blogservice.create(blogi);\n        addtitle('');\n        addauthor('');\n        addurl('');\n        lisaaok('Blogin liäys onnistui');\n        setTimeout(() => {\n          lisaaok(null);\n        }, 5000);\n      } catch (exception) {\n        setErrorMessage('Blogin lisäys ei onnistunut');\n        setTimeout(() => {\n          setErrorMessage(null);\n        }, 5000);\n      }\n    }\n  };\n\n  const handleLogin = async event => {\n    event.preventDefault();\n\n    try {\n      const user = await loginService.login({\n        username,\n        password\n      });\n      blogservice.setToken(user.token);\n      setuser(user);\n      addusername('');\n      addpassword('');\n      lisaaok('Onnistunut sisäänkirjautuminen');\n      setTimeout(() => {\n        lisaaok(null);\n      }, 5000);\n    } catch (exception) {\n      setErrorMessage('Tarkista kirjautumistiedot');\n      setTimeout(() => {\n        setErrorMessage(null);\n      }, 5000);\n    }\n  };\n\n  const ulos = async event => {\n    blogservice.setToken(null);\n    setuser(null);\n  };\n\n  const _useState17 = useState([]),\n        _useState18 = _slicedToArray(_useState17, 2),\n        blogs = _useState18[0],\n        addblogs = _useState18[1];\n\n  useEffect(() => {\n    blogservice.getAll().then(blogi => addblogs(blogi));\n  }, []);\n\n  const loginForm = () => React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, \"Log in to application\"), React.createElement(\"form\", {\n    onSubmit: handleLogin,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, \"Name:       \", React.createElement(\"input\", {\n    value: username,\n    onChange: ({\n      target\n    }) => addusername(target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }), \"Password:   \", React.createElement(\"input\", {\n    type: \"password\",\n    value: password,\n    onChange: ({\n      target\n    }) => addpassword(target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, \"Sign in\")));\n\n  const bloglist = () => React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, \"Blogs\"), blogs.map(blog => React.createElement(Blog, {\n    key: blog.id,\n    blog: blog,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  })));\n\n  return React.createElement(React.Fragment, null, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, \"Blogit\"), React.createElement(\"div\", {\n    className: \"error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, errorMessage), React.createElement(\"div\", {\n    className: \"ok\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, ok), user === null ? loginForm() : React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, user.name, \" logged in\"), bloglist(), React.createElement(\"form\", {\n    onSubmit: add,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, \"title:  \", React.createElement(\"input\", {\n    value: title,\n    onChange: ({\n      target\n    }) => addtitle(target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }), \"author: \", React.createElement(\"input\", {\n    value: author,\n    onChange: ({\n      target\n    }) => addauthor(target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }), \"url:    \", React.createElement(\"input\", {\n    value: url,\n    onChange: ({\n      target\n    }) => addurl(target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, \"lis\\xE4\\xE4\")), React.createElement(\"div\", {\n    className: \"nappi\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onChange: ulos,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, \"Kirjaudu ulos\"))));\n};\n\nexport default App;","map":{"version":3,"sources":["C:\\Users\\norar\\blogilista-front_osa5\\src\\App.js"],"names":["React","Blog","useState","useEffect","blogservice","loginService","App","username","addusername","password","addpassword","errorMessage","setErrorMessage","ok","lisaaok","user","setuser","title","addtitle","author","addauthor","url","addurl","add","event","preventDefault","blogi","target","create","setTimeout","exception","handleLogin","login","setToken","token","ulos","blogs","addblogs","getAll","then","loginForm","value","bloglist","map","blog","id","name"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './index.css';\nimport Blog from './components/Blog';\nimport {useState, useEffect} from 'react';\nimport blogservice from './services/blogservice'\nimport loginService from './services/login'\n\nconst App =()=> {\n\nconst [username, addusername]=useState('')\nconst [password, addpassword]=useState('')\nconst [errorMessage, setErrorMessage] = useState(null)\nconst [ok, lisaaok]=useState(null)\nconst [user, setuser]=useState(null)\nconst [title, addtitle]=useState('')\nconst [author, addauthor]=useState('')\nconst [url, addurl]=useState('')\n\nconst add =async(event)=> {\n  event.preventDefault()\n  if (title===''|| url===''){\n    setErrorMessage('Täytä kaikki kentät')\n  }else {\n    try {\n      const blogi={\n        title:event.target.title,\n        author:event.target.author,\n        url:event.target.url\n      }\n      await blogservice.create(blogi)\n      addtitle('')\n      addauthor('')\n      addurl('')\n      lisaaok('Blogin liäys onnistui')\n      setTimeout(() => {\n        lisaaok(null)\n      }, 5000)\n    }\n    catch(exception){\n      setErrorMessage('Blogin lisäys ei onnistunut')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n}\n  \nconst handleLogin = async (event) => {\n    event.preventDefault()\n    try {\n      const user = await loginService.login({\n        username, password,\n      })\n      blogservice.setToken(user.token)\n      setuser(user)\n      addusername('')\n      addpassword('')\n      lisaaok('Onnistunut sisäänkirjautuminen')\n      setTimeout(() => {\n        lisaaok(null)\n      }, 5000)\n    } catch (exception) {\n      setErrorMessage('Tarkista kirjautumistiedot')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  } \nconst ulos =async (event) =>{\n  blogservice.setToken(null)\n  setuser(null)\n}\n\nconst [blogs, addblogs] =useState([])\n  useEffect(() => {\n   blogservice\n    .getAll()\n     .then(blogi=>\n      addblogs(blogi))\n    }, [])\n\n  const loginForm =()=> (\n      <div>\n        <h2>Log in to application</h2>\n        <form onSubmit={handleLogin}>\n          Name:       <input value={username} onChange={({ target }) => addusername(target.value)}/>\n          <br/>\n          Password:   <input type=\"password\" value={password} onChange={({ target }) => addpassword(target.value)}/>\n          <br/>\n          <button type=\"submit\">Sign in</button>\n        </form>\n      </div>\n  )\n\n  const bloglist=()=>(\n      <div>\n        <h2>Blogs</h2>\n        {blogs.map(blog =>\n          <Blog key={blog.id} blog={blog} />\n        )}\n      </div>\n    )\n\n    return (\n      <><h1>Blogit</h1>\n      <div className=\"error\">{errorMessage}</div>\n      <div className=\"ok\">{ok}</div>\n      {user === null ?\n        loginForm() :\n        <div>\n          <p>{user.name} logged in</p>\n          {bloglist()}\n          <form onSubmit={add}>\n            title:  <input value={title} onChange={({ target }) => addtitle(target.value)} /><br/>\n            author: <input value={author} onChange={({ target }) => addauthor(target.value)} /><br/>\n            url:    <input value={url} onChange={({ target }) => addurl(target.value)} /><br/>\n                <button type=\"submit\" >lisää</button>\n                </form>\n          <div className=\"nappi\"><button onChange={ulos}>Kirjaudu ulos</button></div>\n        </div>\n      }</>\n    ) \n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}